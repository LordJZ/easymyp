                esi = esi ^ edi;                    // XOR ESI,EDI
                edx = edi;                          // MOV EDX,EDI
                edx = edx >> 0x12;                  // SHR EDX,12
                eax = edi;                          // MOV EAX,EDI
                eax = eax << 0x0E;                  // SHL EAX,0E
                edx = edx ^ eax;                    // XOR EDX,EAX
                esi = esi - edx;                    // SUB ESI,EDX
                edx = esi;                          // MOV EDX,ESI
                edx = edx >> 0x15;                  // SHR EDX,15
                eax = esi;                          // MOV EAX,ESI
                eax = eax << 0x0B;                  // SHL EAX,0B
                edx = edx ^ eax;                    // XOR EDX,EAX
                ecx = esi;                          // MOV ECX,ESI
                ecx = ecx ^ ebx;                    // XOR ECX,EBX
                ecx = ecx - edx;                    // SUB ECX,EDX
                edx = ecx;                          // MOV EDX,ECX
                edx = edx << 0x19;                  // SHL EDX,19
                eax = ecx;                          // MOV EAX,ECX
                edi = edi ^ ecx;                    // XOR EDI,ECX
                eax = eax >> 0x07;                  // SHR EAX,7
                edx = edx ^ eax;                    // XOR EDX,EAX
                edi = edi - edx;                    // SUB EDI,EDX
                esi = esi ^ edi;                    // XOR ESI,EDI
                edx = edi;                          // MOV EDX,EDI
                edx = edx >> 0x10;                  // SHR EDX,10
                eax = edi;                          // MOV EAX,EDI
                eax = eax << 0x10;                  // SHL EAX,10
                edx = edx ^ eax;                    // XOR EDX,EAX
                esi = esi - edx;                    // SUB ESI,EDX
                eax = esi;                          // MOV EAX,ESI
                esi = esi >> 0x1C;                  // SHR ESI,1C
                edx = eax;                          // MOV EDX,EAX
                edx = edx << 4;                     // SHL EDX,4
                esi = esi ^ edx;                    // XOR ESI,EDX
                edx = eax;                          // MOV EDX,EAX
                edx = edx ^ ecx;                    // XOR EDX,ECX
                edx = edx - esi;                    // SUB EDX,ESI
                ecx = edx;                          // MOV ECX,EDX
                esi = edx;                          // MOV ESI,EDX
                ecx = ecx >> 0x12;                  // SHR ECX,12
                edi = edi ^ edx;                    // XOR EDI,EDX
                esi = esi << 0x0E;                  // SHL ESI,0E
                ecx = ecx ^ esi;                    // XOR ECX,ESI
                edi = edi - ecx;                    // SUB EDI,ECX
                edx = edi;                          // MOV EDX,EDI
                ecx = edi;                          // MOV ECX,EDI
                eax = eax ^ edi;                    // XOR EAX,EDI
                //POP EDI
                edx = edx << 0x18;                  // SHL EDX,18
                ecx = ecx >> 0x08;                  // SHR ECX,8
                //POP ESI
                edx = edx ^ ecx;                    // XOR EDX,ECX
                //POP EBP
                eax = eax - edx;                    // SUB EAX,EDX